{
  "service": {
    "service": "test-deploy",
    "serviceObject": {
      "name": "test-deploy"
    },
    "provider": {
      "stage": "dev",
      "region": "us-east-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "python3.6",
      "role": "arn:aws:iam::485446758892:role/lambda_s3_full_access",
      "environment": {
        "PYTHONPATH": "/var/runtime:/var/task:/var/task/src:/var/task/libs:/var/task/site-packages"
      },
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "LambdaUnderscorehelloLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/test-deploy-dev-lambda_hello"
            }
          },
          "LambdaUnderscorehelloLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/test-deploy/dev/1533143504755-2018-08-01T17:11:44.755Z/lambda_hello.zip"
              },
              "FunctionName": "test-deploy-dev-lambda_hello",
              "Handler": "src/functions/lambda_hello/hello.handler",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::485446758892:role/lambda_s3_full_access",
              "Runtime": "python3.6",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PYTHONPATH": "/var/runtime:/var/task:/var/task/src:/var/task/libs:/var/task/site-packages"
                }
              }
            },
            "DependsOn": [
              "LambdaUnderscorehelloLogGroup"
            ]
          },
          "LambdaUnderscorehelloLambdaVersionmKupKKdGxziWPz8VtG4IWmaEBSblsplDckLGUEOQr8Y": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LambdaUnderscorehelloLambdaFunction"
              },
              "CodeSha256": "1SyC3ce5n4ELDUcQtPCSVLXCNqigl60pXI6B5Fn0WCI="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-test-deploy",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceDatetime": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "datetime",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodDatetimeGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceDatetime"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LambdaUnderscorehelloLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1533143504821": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodDatetimeGet"
            ]
          },
          "LambdaUnderscorehelloLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LambdaUnderscorehelloLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "LambdaUnderscorehelloLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LambdaUnderscorehelloLambdaVersionmKupKKdGxziWPz8VtG4IWmaEBSblsplDckLGUEOQr8Y"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.us-east-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-python-requirements"
    ],
    "pluginsData": {},
    "functions": {
      "lambda_hello": {
        "handler": "src/functions/lambda_hello/hello.handler",
        "package": {
          "artifact": "/opt/.serverless/lambda_hello.zip"
        },
        "events": [
          {
            "http": {
              "path": "datetime",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "test-deploy-dev-lambda_hello",
        "module": ".",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.6",
        "vpc": {}
      }
    }
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/test-deploy/dev/1533143504755-2018-08-01T17:11:44.755Z",
    "artifact": ""
  }
}